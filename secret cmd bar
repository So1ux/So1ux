local cmd = {}
cmd.new = function(commandFunc, listOfCommands)
	if not listOfCommands then listOfCommands = {} end
	-- Create the UI elements
	local player = game:GetService("Players").LocalPlayer
	local playerGui = player:FindFirstChild("PlayerGui") or Instance.new("PlayerGui", player)
	local uis = game:GetService("UserInputService")

	local screenGui = Instance.new("ScreenGui")
	screenGui.Parent = game.CoreGui

	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(0, 300, 0, 80)
	frame.Position = UDim2.new(0.5, -150, 0.9, -60)
	frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	frame.BorderSizePixel = 0
	frame.Parent = screenGui

	local textBox = Instance.new("TextBox")
	textBox.Size = UDim2.new(1, -50, 0.8, 0)
	textBox.Position = UDim2.new(0, 5, 0, 5)
	textBox.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
	textBox.TextColor3 = Color3.fromRGB(255, 255, 255)
	textBox.PlaceholderText = "Enter command..."
	textBox.ClearTextOnFocus = false
	textBox.Parent = frame

	local executeButton = Instance.new("TextButton")
	executeButton.Size = UDim2.new(0, 40, 1, -10)
	executeButton.Position = UDim2.new(1, -45, 0, 5)
	executeButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	executeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
	executeButton.Text = "Run"
	executeButton.Parent = frame
	

	local suggestionFrame = Instance.new("Frame")
	suggestionFrame.Size = UDim2.new(1, -10, 0, 75)
	suggestionFrame.Position = UDim2.new(0, 5, 1, 5)
	suggestionFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	suggestionFrame.Visible = false
	suggestionFrame.Parent = frame
	
	
	Instance.new("UIDragDetector", frame)
	-- Function to execute commands
	local function executeCommand(command)
		--print("Executed command:", command) -- Replace this with actual command execution logic
		commandFunc(command)
	end
	
	local function getClosestCommand(input)
		local bestMatch = nil
		local shortestDistance = math.huge

		for _, command in ipairs(listOfCommands) do
			local distance = string.len(command) - #input
			if command:sub(1, #input) == input and distance < shortestDistance then
				bestMatch = command
				shortestDistance = distance
			end
		end

		return bestMatch
	end
	local function getMatchingCommands(input)
		local matches = {}
		for _, command in ipairs(listOfCommands) do
			if command:sub(1, #input) == input then
				table.insert(matches, command)
			end
		end
		return matches
	end
	
	textBox:GetPropertyChangedSignal("Text"):Connect(function()
		for _, child in ipairs(suggestionFrame:GetChildren()) do
			if child:IsA("TextButton") then
				child:Destroy()
			end
		end

		local matches = getMatchingCommands(textBox.Text)
		if #matches > 0 then
			suggestionFrame.Visible = true
			for i, match in ipairs(matches) do
				local suggestionButton = Instance.new("TextButton")
				suggestionButton.Size = UDim2.new(1, 0, 0, 20)
				suggestionButton.Position = UDim2.new(0, 0, 0, (i - 1) * 20)
				suggestionButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
				suggestionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
				suggestionButton.Text = match
				suggestionButton.Parent = suggestionFrame

				suggestionButton.MouseButton1Click:Connect(function()
					textBox.Text = match
					suggestionFrame.Visible = false
				end)
			end
		else
			for i, v in pairs(suggestionFrame:GetChildren()) do
				v:Destroy()
			end
			suggestionFrame.Visible = false
		end
	end)


	-- Connect button click
	executeButton.MouseButton1Click:Connect(function()
		local command = textBox.Text
		if command ~= "" then
			executeCommand(command)
			textBox.Text = "" -- Clear after execution
		end
	end)

	-- Connect Enter key
	textBox.FocusLost:Connect(function(enterPressed)
		if enterPressed then
			local command = textBox.Text
			if command ~= "" then
				executeCommand(command)
				textBox.Text = "" -- Clear after execution
				suggestionFrame.Visible = false
			end
		end
	end)

	uis.InputBegan:Connect(function(inp, gps)
		if inp.KeyCode == Enum.KeyCode.RightShift and uis:IsKeyDown(Enum.KeyCode.LeftAlt) then
			screenGui.Enabled = not screenGui.Enabled
		end 
	end)
	local function getOneinSuggestionFrame()
		return suggestionFrame:GetChildren()[1]
	end
	game:GetService("UserInputService").InputBegan:Connect(function(inp, gps)
		if gps and inp.KeyCode == Enum.KeyCode.Tab then
			local t = getOneinSuggestionFrame().Text
			task.wait()
			textBox.Text = t 
			suggestionFrame.Visible = false
		elseif gps and inp.KeyCode == Enum.KeyCode.Down then
			textBox.Text = getOneinSuggestionFrame().Text
			suggestionFrame.Visible = false
		end
	end)

end
return cmd
